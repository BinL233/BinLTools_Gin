class L2D{constructor(e){this.basePath=e,this.loader=new PIXI.loaders.Loader(this.basePath),this.animatorBuilder=new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder,this.timeScale=1,this.models={},this.TriggerMotions=new Map,this.TapAreas=new Map}setPhysics3Json(e){return this.physicsRigBuilder||(this.physicsRigBuilder=new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder),this.physicsRigBuilder.setPhysics3Json(e),this}load(e,s){if(this.models[e])s.changeCanvas(this.models[e]);else{let i=e+"/",r=e+".model3.json",t=[],o=0,l=[],a=[],d=this;this.loader.add(e+"_model",i+r,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),a.push(e+"_model"),this.loader.load(((r,a)=>{let h=a[e+"_model"].data;if(void 0!==h.FileReferences.Moc&&r.add(e+"_moc",i+h.FileReferences.Moc,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER}),void 0!==h.FileReferences.Textures&&h.FileReferences.Textures.forEach((s=>{r.add(e+"_texture"+o,i+s),o++})),void 0!==h.FileReferences.Physics&&r.add(e+"_physics",i+h.FileReferences.Physics,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),void 0!==h.FileReferences.Motions)for(let e in h.FileReferences.Motions){var n=[];h.FileReferences.Motions[e].forEach((e=>{let s=e.File.split("/").pop().split(".").shift();if(l.includes(s)){var t=s+String(Date.now());r.add(t,i+e.File,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),l.push(s)}else r.add(s,i+e.File,{xhrType:PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON}),l.push(s);n.push(s)})),d.TriggerMotions.set(e,n)}let c=null;if(void 0!==h.Groups&&(c=LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(h)),void 0!==h.HitAreas){let e=h.HitAreas;e.forEach((e=>{e.Order||(e.Order=0)})),e.sort((function(e,s){return s.Order-e.Order})),e.forEach((e=>{let[s,i]=e.Motion.split(":");i?d.TapAreas.set(e.Id,i.split(",")):d.TapAreas.set(e.Id,d.TriggerMotions.get(s))}))}r.load(((i,r)=>{let a=null;if(void 0!==r[e+"_moc"]&&(a=Live2DCubismCore.Moc.fromArrayBuffer(r[e+"_moc"].data)),void 0!==r[e+"_texture0"])for(let s=0;s<o;s++)t.splice(s,0,r[e+"_texture"+s].texture);void 0!==r[e+"_physics"]&&this.setPhysics3Json(r[e+"_physics"].data);let d=new Map;l.forEach((e=>{d.set(e,LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(r[e].data))}));let h=null,n=Live2DCubismCore.Model.fromMoc(a);if(null==n)return;let u=this.animatorBuilder.setTarget(n).setTimeScale(this.timeScale).build(),R=this.physicsRigBuilder.setTarget(n).setTimeScale(this.timeScale).build();h=LIVE2DCUBISMPIXI.Model._create(n,t,u,R,null,c),h.motions=d,this.models[e]=h,s.changeCanvas(h)}))}))}}}