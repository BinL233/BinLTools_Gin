{"ast":null,"code":"import * as PIXI from 'pixi.js';\nimport LIVE2DCUBISMFRAMEWORK from \"./live2dcubismframework.js\";\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar LIVE2DCUBISMPIXI;\n(function (LIVE2DCUBISMPIXI) {\n  var Model = function (_super) {\n    __extends(Model, _super);\n    function Model(coreModel, textures, animator, physicsRig, userData, groups) {\n      var _this = _super.call(this) || this;\n      _this._coreModel = coreModel;\n      _this._textures = textures;\n      _this._animator = animator;\n      _this._physicsRig = physicsRig;\n      _this._userData = userData;\n      _this._groups = groups;\n      _this._animator.groups = _this._groups;\n      if (_this._coreModel == null) {\n        return _this;\n      }\n      _this._meshes = new Array(_this._coreModel.drawables.ids.length);\n      for (var m = 0; m < _this._meshes.length; ++m) {\n        var uvs = _this._coreModel.drawables.vertexUvs[m].slice(0, _this._coreModel.drawables.vertexUvs[m].length);\n        for (var v = 1; v < uvs.length; v += 2) {\n          uvs[v] = 1 - uvs[v];\n        }\n        _this._meshes[m] = new CubismMesh(textures[_this._coreModel.drawables.textureIndices[m]], _this._coreModel.drawables.vertexPositions[m], uvs, _this._coreModel.drawables.indices[m], PIXI.DRAW_MODES.TRIANGLES);\n        _this._meshes[m].name = _this._coreModel.drawables.ids[m];\n        _this._meshes[m].scale.y *= -1;\n        _this._meshes[m].isCulling = !Live2DCubismCore.Utils.hasIsDoubleSidedBit(_this._coreModel.drawables.constantFlags[m]);\n        if (Live2DCubismCore.Utils.hasBlendAdditiveBit(_this._coreModel.drawables.constantFlags[m])) {\n          if (_this._coreModel.drawables.maskCounts[m] > 0) {\n            var addFilter = new PIXI.Filter();\n            addFilter.blendMode = PIXI.BLEND_MODES.ADD;\n            _this._meshes[m].filters = [addFilter];\n          } else {\n            _this._meshes[m].blendMode = PIXI.BLEND_MODES.ADD;\n          }\n        } else if (Live2DCubismCore.Utils.hasBlendMultiplicativeBit(_this._coreModel.drawables.constantFlags[m])) {\n          if (_this._coreModel.drawables.maskCounts[m] > 0) {\n            var multiplyFilter = new PIXI.Filter();\n            multiplyFilter.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n            _this._meshes[m].filters = [multiplyFilter];\n          } else {\n            _this._meshes[m].blendMode = PIXI.BLEND_MODES.MULTIPLY;\n          }\n        }\n        _this.addChild(_this._meshes[m]);\n      }\n      ;\n      _this._maskSpriteContainer = new MaskSpriteContainer(coreModel, _this);\n      return _this;\n    }\n    Object.defineProperty(Model.prototype, \"parameters\", {\n      get: function () {\n        return this._coreModel.parameters;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"parts\", {\n      get: function () {\n        return this._coreModel.parts;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"drawables\", {\n      get: function () {\n        return this._coreModel.drawables;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"canvasinfo\", {\n      get: function () {\n        return this._coreModel.canvasinfo;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"textures\", {\n      get: function () {\n        return this._textures;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"animator\", {\n      get: function () {\n        return this._animator;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"userData\", {\n      get: function () {\n        return this._userData;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"meshes\", {\n      get: function () {\n        return this._meshes;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"masks\", {\n      get: function () {\n        return this._maskSpriteContainer;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(Model.prototype, \"groups\", {\n      get: function () {\n        return this._groups;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Model.prototype.update = function (delta) {\n      var _this = this;\n      var deltaTime = 0.016 * delta;\n      this._animator.updateAndEvaluate(deltaTime);\n      if (this._physicsRig) {\n        this._physicsRig.updateAndEvaluate(deltaTime);\n      }\n      this._coreModel.update();\n      var sort = false;\n      for (var m = 0; m < this._meshes.length; ++m) {\n        this._meshes[m].alpha = this._coreModel.drawables.opacities[m];\n        this._meshes[m].visible = Live2DCubismCore.Utils.hasIsVisibleBit(this._coreModel.drawables.dynamicFlags[m]);\n        if (Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(this._coreModel.drawables.dynamicFlags[m])) {\n          this._meshes[m].vertices = this._coreModel.drawables.vertexPositions[m];\n          this._meshes[m].dirtyVertex = true;\n        }\n        if (Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(this._coreModel.drawables.dynamicFlags[m])) {\n          sort = true;\n        }\n      }\n      if (sort) {\n        this.children.sort(function (a, b) {\n          var aIndex = _this._meshes.indexOf(a);\n          var bIndex = _this._meshes.indexOf(b);\n          var aRenderOrder = _this._coreModel.drawables.renderOrders[aIndex];\n          var bRenderOrder = _this._coreModel.drawables.renderOrders[bIndex];\n          return aRenderOrder - bRenderOrder;\n        });\n      }\n      this._coreModel.drawables.resetDynamicFlags();\n    };\n    Model.prototype.destroy = function (options) {\n      if (this._coreModel != null) {\n        this._coreModel.release();\n      }\n      _super.prototype.destroy.call(this, options);\n      this.masks.destroy();\n      this._meshes.forEach(function (m) {\n        m.destroy();\n      });\n      if (options == true || options.texture) {\n        this._textures.forEach(function (t) {\n          t.destroy();\n        });\n      }\n    };\n    Model.prototype.getModelMeshById = function (id) {\n      if (this._meshes == null) return null;\n      for (var _i = 0, _a = this._meshes; _i < _a.length; _i++) {\n        var mesh = _a[_i];\n        if (mesh.name === id) return mesh;\n      }\n      return null;\n    };\n    Model.prototype.addParameterValueById = function (id, value) {\n      var p = this._coreModel.parameters.ids.indexOf(id);\n      if (p == -1) {\n        return;\n      }\n      this._coreModel.parameters.values[p] = this._coreModel.parameters.values[p] + value;\n    };\n    Model._create = function (coreModel, textures, animator, physicsRig, userData, groups) {\n      if (physicsRig === void 0) {\n        physicsRig = null;\n      }\n      if (userData === void 0) {\n        userData = null;\n      }\n      if (groups === void 0) {\n        groups = null;\n      }\n      var model = new Model(coreModel, textures, animator, physicsRig, userData, groups);\n      if (!model.isValid) {\n        model.destroy();\n        return null;\n      }\n      return model;\n    };\n    Object.defineProperty(Model.prototype, \"isValid\", {\n      get: function () {\n        return this._coreModel != null;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    return Model;\n  }(PIXI.Container);\n  LIVE2DCUBISMPIXI.Model = Model;\n  var MaskSpriteContainer = function (_super) {\n    __extends(MaskSpriteContainer, _super);\n    function MaskSpriteContainer(coreModel, pixiModel) {\n      var _this = _super.call(this) || this;\n      _this._maskShaderVertSrc = new String(\"\\n            attribute vec2 aVertexPosition;\\n            attribute vec2 aTextureCoord;\\n            uniform mat3 projectionMatrix;\\n            varying vec2 vTextureCoord;\\n            void main(void){\\n                gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n                vTextureCoord = aTextureCoord;\\n            }\\n            \");\n      _this._maskShaderFragSrc = new String(\"\\n            varying vec2 vTextureCoord;\\n            uniform sampler2D uSampler;\\n            void main(void){\\n                vec4 c = texture2D(uSampler, vTextureCoord);\\n                c.r = c.a;\\n                c.g = 0.0;\\n                c.b = 0.0;\\n                gl_FragColor = c;\\n            }\\n            \");\n      _this._maskShader = new PIXI.Filter(_this._maskShaderVertSrc.toString(), _this._maskShaderFragSrc.toString());\n      var _maskCounts = coreModel.drawables.maskCounts;\n      var _maskRelationList = coreModel.drawables.masks;\n      _this._maskMeshContainers = new Array();\n      _this._maskTextures = new Array();\n      _this._maskSprites = new Array();\n      for (var m = 0; m < pixiModel.meshes.length; ++m) {\n        if (_maskCounts[m] > 0) {\n          var newContainer = new PIXI.Container();\n          for (var n = 0; n < _maskRelationList[m].length; ++n) {\n            var meshMaskID = coreModel.drawables.masks[m][n];\n            var maskMesh = new CubismMesh(pixiModel.meshes[meshMaskID].texture, pixiModel.meshes[meshMaskID].vertices, pixiModel.meshes[meshMaskID].uvs, pixiModel.meshes[meshMaskID].indices, PIXI.DRAW_MODES.TRIANGLES);\n            maskMesh.name = pixiModel.meshes[meshMaskID].name;\n            maskMesh.transform = pixiModel.meshes[meshMaskID].transform;\n            maskMesh.worldTransform = pixiModel.meshes[meshMaskID].worldTransform;\n            maskMesh.localTransform = pixiModel.meshes[meshMaskID].localTransform;\n            maskMesh.isCulling = pixiModel.meshes[meshMaskID].isCulling;\n            maskMesh.isMaskMesh = true;\n            maskMesh.filters = [_this._maskShader];\n            newContainer.addChild(maskMesh);\n          }\n          newContainer.transform = pixiModel.transform;\n          newContainer.worldTransform = pixiModel.worldTransform;\n          newContainer.localTransform = pixiModel.localTransform;\n          _this._maskMeshContainers.push(newContainer);\n          var newTexture = PIXI.RenderTexture.create(0, 0);\n          _this._maskTextures.push(newTexture);\n          var newSprite = new PIXI.Sprite(newTexture);\n          _this._maskSprites.push(newSprite);\n          _this.addChild(newSprite);\n          pixiModel.meshes[m].mask = newSprite;\n        }\n      }\n      return _this;\n    }\n    Object.defineProperty(MaskSpriteContainer.prototype, \"maskSprites\", {\n      get: function () {\n        return this._maskSprites;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    Object.defineProperty(MaskSpriteContainer.prototype, \"maskMeshes\", {\n      get: function () {\n        return this._maskMeshContainers;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    MaskSpriteContainer.prototype.destroy = function (options) {\n      this._maskSprites.forEach(function (m) {\n        m.destroy();\n      });\n      this._maskTextures.forEach(function (m) {\n        m.destroy();\n      });\n      this._maskMeshContainers.forEach(function (m) {\n        m.destroy();\n      });\n      this._maskShader = null;\n    };\n    MaskSpriteContainer.prototype.update = function (appRenderer) {\n      for (var m = 0; m < this._maskSprites.length; ++m) {\n        appRenderer.render(this._maskMeshContainers[m], this._maskTextures[m], true, null, false);\n      }\n    };\n    MaskSpriteContainer.prototype.resize = function (viewWidth, viewHeight) {\n      for (var m = 0; m < this._maskTextures.length; ++m) {\n        this._maskTextures[m].resize(viewWidth, viewHeight, false);\n      }\n    };\n    return MaskSpriteContainer;\n  }(PIXI.Container);\n  LIVE2DCUBISMPIXI.MaskSpriteContainer = MaskSpriteContainer;\n  var ModelBuilder = function () {\n    function ModelBuilder() {\n      this._textures = new Array();\n      this._timeScale = 1;\n      this._animatorBuilder = new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder();\n    }\n    ModelBuilder.prototype.setMoc = function (value) {\n      this._moc = value;\n      return this;\n    };\n    ModelBuilder.prototype.setTimeScale = function (value) {\n      this._timeScale = value;\n      return this;\n    };\n    ModelBuilder.prototype.setPhysics3Json = function (value) {\n      if (!this._physicsRigBuilder) {\n        this._physicsRigBuilder = new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder();\n      }\n      this._physicsRigBuilder.setPhysics3Json(value);\n      return this;\n    };\n    ModelBuilder.prototype.setUserData3Json = function (value) {\n      if (!this._userDataBuilder) {\n        this._userDataBuilder = new LIVE2DCUBISMFRAMEWORK.UserDataBuilder();\n      }\n      this._userDataBuilder.setUserData3Json(value);\n      return this;\n    };\n    ModelBuilder.prototype.addTexture = function (index, texture) {\n      this._textures.splice(index, 0, texture);\n      return this;\n    };\n    ModelBuilder.prototype.addAnimatorLayer = function (name, blender, weight) {\n      if (blender === void 0) {\n        blender = LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE;\n      }\n      if (weight === void 0) {\n        weight = 1;\n      }\n      this._animatorBuilder.addLayer(name, blender, weight);\n      return this;\n    };\n    ModelBuilder.prototype.addGroups = function (groups) {\n      this._groups = groups;\n      return this;\n    };\n    ModelBuilder.prototype.buildFromModel3Json = function (loader, model3Obj, callbackFunc) {\n      var _this = this;\n      console.log(model3Obj);\n      var model3URL = model3Obj.url;\n      var modelDir = model3URL.substring(0, model3URL.lastIndexOf(\"/\") + 1);\n      var textureCount = 0;\n      if (typeof model3Obj.data['FileReferences']['Moc'] !== \"undefined\") loader.add('moc', modelDir + model3Obj.data['FileReferences']['Moc'], {\n        xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER\n      });\n      if (typeof model3Obj.data['FileReferences']['Textures'] !== \"undefined\") {\n        model3Obj.data['FileReferences']['Textures'].forEach(function (element) {\n          loader.add('texture' + textureCount, modelDir + element);\n          textureCount++;\n        });\n      }\n      if (typeof model3Obj.data['FileReferences']['Physics'] !== \"undefined\") loader.add('physics', modelDir + model3Obj.data['FileReferences']['Physics'], {\n        xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON\n      });\n      if (typeof model3Obj.data['FileReferences']['UserData'] !== \"undefined\") loader.add('userdata', modelDir + model3Obj.data['FileReferences']['UserData'], {\n        xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON\n      });\n      if (typeof (model3Obj.data['Groups'] !== \"undefined\")) this._groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj.data);\n      loader.load(function (loader, resources) {\n        if (typeof resources['moc'] !== \"undefined\") _this.setMoc(Live2DCubismCore.Moc.fromArrayBuffer(resources['moc'].data));\n        if (typeof resources['texture' + 0] !== \"undefined\") {\n          for (var i = 0; i < textureCount; i++) _this.addTexture(i, resources['texture' + i].texture);\n        }\n        if (typeof resources['physics'] !== \"undefined\") _this.setPhysics3Json(resources['physics'].data);\n        if (typeof resources['userdata'] !== \"undefined\") _this.setUserData3Json(resources['userdata'].data);\n        var model = _this.build();\n        callbackFunc(model);\n      });\n    };\n    ModelBuilder.prototype.build = function () {\n      var coreModel = Live2DCubismCore.Model.fromMoc(this._moc);\n      if (coreModel == null) {\n        return null;\n      }\n      var animator = this._animatorBuilder.setTarget(coreModel).setTimeScale(this._timeScale).build();\n      var physicsRig = null;\n      if (this._physicsRigBuilder) {\n        physicsRig = this._physicsRigBuilder.setTarget(coreModel).setTimeScale(this._timeScale).build();\n      }\n      var userData = null;\n      if (this._userDataBuilder) {\n        userData = this._userDataBuilder.setTarget(coreModel).build();\n      }\n      return Model._create(coreModel, this._textures, animator, physicsRig, userData, this._groups);\n    };\n    return ModelBuilder;\n  }();\n  LIVE2DCUBISMPIXI.ModelBuilder = ModelBuilder;\n  var CubismMesh = function (_super) {\n    __extends(CubismMesh, _super);\n    function CubismMesh() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n      _this.isCulling = false;\n      _this.isMaskMesh = false;\n      return _this;\n    }\n    CubismMesh.prototype._renderWebGL = function (renderer) {\n      if (this.isMaskMesh === true) renderer.state.setFrontFace(1);else renderer.state.setFrontFace(0);\n      if (this.isCulling === true) renderer.state.setCullFace(1);else renderer.state.setCullFace(0);\n      _super.prototype._renderWebGL.call(this, renderer);\n      renderer.state.setFrontFace(0);\n    };\n    return CubismMesh;\n  }(PIXI.mesh.Mesh);\n  LIVE2DCUBISMPIXI.CubismMesh = CubismMesh;\n})(LIVE2DCUBISMPIXI || (LIVE2DCUBISMPIXI = {}));","map":{"version":3,"names":["PIXI","LIVE2DCUBISMFRAMEWORK","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","LIVE2DCUBISMPIXI","Model","_super","coreModel","textures","animator","physicsRig","userData","groups","_this","call","_coreModel","_textures","_animator","_physicsRig","_userData","_groups","_meshes","drawables","ids","length","m","uvs","vertexUvs","slice","v","CubismMesh","textureIndices","vertexPositions","indices","DRAW_MODES","TRIANGLES","name","scale","y","isCulling","Live2DCubismCore","Utils","hasIsDoubleSidedBit","constantFlags","hasBlendAdditiveBit","maskCounts","addFilter","Filter","blendMode","BLEND_MODES","ADD","filters","hasBlendMultiplicativeBit","multiplyFilter","MULTIPLY","addChild","_maskSpriteContainer","MaskSpriteContainer","defineProperty","get","parameters","enumerable","configurable","parts","canvasinfo","update","delta","deltaTime","updateAndEvaluate","sort","alpha","opacities","visible","hasIsVisibleBit","dynamicFlags","hasVertexPositionsDidChangeBit","vertices","dirtyVertex","hasRenderOrderDidChangeBit","children","a","aIndex","indexOf","bIndex","aRenderOrder","renderOrders","bRenderOrder","resetDynamicFlags","destroy","options","release","masks","forEach","texture","t","getModelMeshById","id","_i","_a","mesh","addParameterValueById","value","values","_create","model","isValid","Container","pixiModel","_maskShaderVertSrc","String","_maskShaderFragSrc","_maskShader","toString","_maskCounts","_maskRelationList","_maskMeshContainers","_maskTextures","_maskSprites","meshes","newContainer","n","meshMaskID","maskMesh","transform","worldTransform","localTransform","isMaskMesh","push","newTexture","RenderTexture","newSprite","Sprite","mask","appRenderer","render","resize","viewWidth","viewHeight","ModelBuilder","_timeScale","_animatorBuilder","AnimatorBuilder","setMoc","_moc","setTimeScale","setPhysics3Json","_physicsRigBuilder","PhysicsRigBuilder","setUserData3Json","_userDataBuilder","UserDataBuilder","addTexture","index","splice","addAnimatorLayer","blender","weight","BuiltinAnimationBlenders","OVERRIDE","addLayer","addGroups","buildFromModel3Json","loader","model3Obj","callbackFunc","console","log","model3URL","url","modelDir","substring","lastIndexOf","textureCount","data","add","xhrType","loaders","Resource","XHR_RESPONSE_TYPE","BUFFER","element","JSON","Groups","fromModel3Json","load","resources","Moc","fromArrayBuffer","i","build","fromMoc","setTarget","apply","arguments","_renderWebGL","renderer","state","setFrontFace","setCullFace","Mesh"],"sources":["/Users/kaileying/Documents/Repos/BinLTools_Gin/web/src/components/live2dWigit/live2dcubismpixi.js"],"sourcesContent":["import * as PIXI from 'pixi.js';\nimport LIVE2DCUBISMFRAMEWORK from \"./live2dcubismframework.js\"\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar LIVE2DCUBISMPIXI;\n(function (LIVE2DCUBISMPIXI) {\n    var Model = (function (_super) {\n        __extends(Model, _super);\n        function Model(coreModel, textures, animator, physicsRig, userData, groups) {\n            var _this = _super.call(this) || this;\n            _this._coreModel = coreModel;\n            _this._textures = textures;\n            _this._animator = animator;\n            _this._physicsRig = physicsRig;\n            _this._userData = userData;\n            _this._groups = groups;\n            _this._animator.groups = _this._groups;\n            if (_this._coreModel == null) {\n                return _this;\n            }\n            _this._meshes = new Array(_this._coreModel.drawables.ids.length);\n            for (var m = 0; m < _this._meshes.length; ++m) {\n                var uvs = _this._coreModel.drawables.vertexUvs[m].slice(0, _this._coreModel.drawables.vertexUvs[m].length);\n                for (var v = 1; v < uvs.length; v += 2) {\n                    uvs[v] = 1 - uvs[v];\n                }\n                _this._meshes[m] = new CubismMesh(textures[_this._coreModel.drawables.textureIndices[m]], _this._coreModel.drawables.vertexPositions[m], uvs, _this._coreModel.drawables.indices[m], PIXI.DRAW_MODES.TRIANGLES);\n                _this._meshes[m].name = _this._coreModel.drawables.ids[m];\n                _this._meshes[m].scale.y *= -1;\n                _this._meshes[m].isCulling = !Live2DCubismCore.Utils.hasIsDoubleSidedBit(_this._coreModel.drawables.constantFlags[m]);\n                if (Live2DCubismCore.Utils.hasBlendAdditiveBit(_this._coreModel.drawables.constantFlags[m])) {\n                    if (_this._coreModel.drawables.maskCounts[m] > 0) {\n                        var addFilter = new PIXI.Filter();\n                        addFilter.blendMode = PIXI.BLEND_MODES.ADD;\n                        _this._meshes[m].filters = [addFilter];\n                    }\n                    else {\n                        _this._meshes[m].blendMode = PIXI.BLEND_MODES.ADD;\n                    }\n                }\n                else if (Live2DCubismCore.Utils.hasBlendMultiplicativeBit(_this._coreModel.drawables.constantFlags[m])) {\n                    if (_this._coreModel.drawables.maskCounts[m] > 0) {\n                        var multiplyFilter = new PIXI.Filter();\n                        multiplyFilter.blendMode = PIXI.BLEND_MODES.MULTIPLY;\n                        _this._meshes[m].filters = [multiplyFilter];\n                    }\n                    else {\n                        _this._meshes[m].blendMode = PIXI.BLEND_MODES.MULTIPLY;\n                    }\n                }\n                _this.addChild(_this._meshes[m]);\n            }\n            ;\n            _this._maskSpriteContainer = new MaskSpriteContainer(coreModel, _this);\n            return _this;\n        }\n        Object.defineProperty(Model.prototype, \"parameters\", {\n            get: function () {\n                return this._coreModel.parameters;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"parts\", {\n            get: function () {\n                return this._coreModel.parts;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"drawables\", {\n            get: function () {\n                return this._coreModel.drawables;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"canvasinfo\", {\n            get: function () {\n                return this._coreModel.canvasinfo;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"textures\", {\n            get: function () {\n                return this._textures;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"animator\", {\n            get: function () {\n                return this._animator;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"userData\", {\n            get: function () {\n                return this._userData;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"meshes\", {\n            get: function () {\n                return this._meshes;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"masks\", {\n            get: function () {\n                return this._maskSpriteContainer;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(Model.prototype, \"groups\", {\n            get: function () {\n                return this._groups;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Model.prototype.update = function (delta) {\n            var _this = this;\n            var deltaTime = 0.016 * delta;\n            this._animator.updateAndEvaluate(deltaTime);\n            if (this._physicsRig) {\n                this._physicsRig.updateAndEvaluate(deltaTime);\n            }\n            this._coreModel.update();\n            var sort = false;\n            for (var m = 0; m < this._meshes.length; ++m) {\n                this._meshes[m].alpha = this._coreModel.drawables.opacities[m];\n                this._meshes[m].visible = Live2DCubismCore.Utils.hasIsVisibleBit(this._coreModel.drawables.dynamicFlags[m]);\n                if (Live2DCubismCore.Utils.hasVertexPositionsDidChangeBit(this._coreModel.drawables.dynamicFlags[m])) {\n                    this._meshes[m].vertices = this._coreModel.drawables.vertexPositions[m];\n                    this._meshes[m].dirtyVertex = true;\n                }\n                if (Live2DCubismCore.Utils.hasRenderOrderDidChangeBit(this._coreModel.drawables.dynamicFlags[m])) {\n                    sort = true;\n                }\n            }\n            if (sort) {\n                this.children.sort(function (a, b) {\n                    var aIndex = _this._meshes.indexOf(a);\n                    var bIndex = _this._meshes.indexOf(b);\n                    var aRenderOrder = _this._coreModel.drawables.renderOrders[aIndex];\n                    var bRenderOrder = _this._coreModel.drawables.renderOrders[bIndex];\n                    return aRenderOrder - bRenderOrder;\n                });\n            }\n            this._coreModel.drawables.resetDynamicFlags();\n        };\n        Model.prototype.destroy = function (options) {\n            if (this._coreModel != null) {\n                this._coreModel.release();\n            }\n            _super.prototype.destroy.call(this, options);\n            this.masks.destroy();\n            this._meshes.forEach(function (m) {\n                m.destroy();\n            });\n            if (options == true || options.texture) {\n                this._textures.forEach(function (t) {\n                    t.destroy();\n                });\n            }\n        };\n        Model.prototype.getModelMeshById = function (id) {\n            if (this._meshes == null)\n                return null;\n            for (var _i = 0, _a = this._meshes; _i < _a.length; _i++) {\n                var mesh = _a[_i];\n                if (mesh.name === id)\n                    return mesh;\n            }\n            return null;\n        };\n        Model.prototype.addParameterValueById = function (id, value) {\n            var p = this._coreModel.parameters.ids.indexOf(id);\n            if (p == -1) {\n                return;\n            }\n            this._coreModel.parameters.values[p] = this._coreModel.parameters.values[p] + value;\n        };\n        Model._create = function (coreModel, textures, animator, physicsRig, userData, groups) {\n            if (physicsRig === void 0) { physicsRig = null; }\n            if (userData === void 0) { userData = null; }\n            if (groups === void 0) { groups = null; }\n            var model = new Model(coreModel, textures, animator, physicsRig, userData, groups);\n            if (!model.isValid) {\n                model.destroy();\n                return null;\n            }\n            return model;\n        };\n        Object.defineProperty(Model.prototype, \"isValid\", {\n            get: function () {\n                return this._coreModel != null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return Model;\n    }(PIXI.Container));\n    LIVE2DCUBISMPIXI.Model = Model;\n    var MaskSpriteContainer = (function (_super) {\n        __extends(MaskSpriteContainer, _super);\n        function MaskSpriteContainer(coreModel, pixiModel) {\n            var _this = _super.call(this) || this;\n            _this._maskShaderVertSrc = new String(\"\\n            attribute vec2 aVertexPosition;\\n            attribute vec2 aTextureCoord;\\n            uniform mat3 projectionMatrix;\\n            varying vec2 vTextureCoord;\\n            void main(void){\\n                gl_Position = vec4((projectionMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\\n                vTextureCoord = aTextureCoord;\\n            }\\n            \");\n            _this._maskShaderFragSrc = new String(\"\\n            varying vec2 vTextureCoord;\\n            uniform sampler2D uSampler;\\n            void main(void){\\n                vec4 c = texture2D(uSampler, vTextureCoord);\\n                c.r = c.a;\\n                c.g = 0.0;\\n                c.b = 0.0;\\n                gl_FragColor = c;\\n            }\\n            \");\n            _this._maskShader = new PIXI.Filter(_this._maskShaderVertSrc.toString(), _this._maskShaderFragSrc.toString());\n            var _maskCounts = coreModel.drawables.maskCounts;\n            var _maskRelationList = coreModel.drawables.masks;\n            _this._maskMeshContainers = new Array();\n            _this._maskTextures = new Array();\n            _this._maskSprites = new Array();\n            for (var m = 0; m < pixiModel.meshes.length; ++m) {\n                if (_maskCounts[m] > 0) {\n                    var newContainer = new PIXI.Container;\n                    for (var n = 0; n < _maskRelationList[m].length; ++n) {\n                        var meshMaskID = coreModel.drawables.masks[m][n];\n                        var maskMesh = new CubismMesh(pixiModel.meshes[meshMaskID].texture, pixiModel.meshes[meshMaskID].vertices, pixiModel.meshes[meshMaskID].uvs, pixiModel.meshes[meshMaskID].indices, PIXI.DRAW_MODES.TRIANGLES);\n                        maskMesh.name = pixiModel.meshes[meshMaskID].name;\n                        maskMesh.transform = pixiModel.meshes[meshMaskID].transform;\n                        maskMesh.worldTransform = pixiModel.meshes[meshMaskID].worldTransform;\n                        maskMesh.localTransform = pixiModel.meshes[meshMaskID].localTransform;\n                        maskMesh.isCulling = pixiModel.meshes[meshMaskID].isCulling;\n                        maskMesh.isMaskMesh = true;\n                        maskMesh.filters = [_this._maskShader];\n                        newContainer.addChild(maskMesh);\n                    }\n                    newContainer.transform = pixiModel.transform;\n                    newContainer.worldTransform = pixiModel.worldTransform;\n                    newContainer.localTransform = pixiModel.localTransform;\n                    _this._maskMeshContainers.push(newContainer);\n                    var newTexture = PIXI.RenderTexture.create(0, 0);\n                    _this._maskTextures.push(newTexture);\n                    var newSprite = new PIXI.Sprite(newTexture);\n                    _this._maskSprites.push(newSprite);\n                    _this.addChild(newSprite);\n                    pixiModel.meshes[m].mask = newSprite;\n                }\n            }\n            return _this;\n        }\n        Object.defineProperty(MaskSpriteContainer.prototype, \"maskSprites\", {\n            get: function () {\n                return this._maskSprites;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(MaskSpriteContainer.prototype, \"maskMeshes\", {\n            get: function () {\n                return this._maskMeshContainers;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        MaskSpriteContainer.prototype.destroy = function (options) {\n            this._maskSprites.forEach(function (m) {\n                m.destroy();\n            });\n            this._maskTextures.forEach(function (m) {\n                m.destroy();\n            });\n            this._maskMeshContainers.forEach(function (m) {\n                m.destroy();\n            });\n            this._maskShader = null;\n        };\n        MaskSpriteContainer.prototype.update = function (appRenderer) {\n            for (var m = 0; m < this._maskSprites.length; ++m) {\n                appRenderer.render(this._maskMeshContainers[m], this._maskTextures[m], true, null, false);\n            }\n        };\n        MaskSpriteContainer.prototype.resize = function (viewWidth, viewHeight) {\n            for (var m = 0; m < this._maskTextures.length; ++m) {\n                this._maskTextures[m].resize(viewWidth, viewHeight, false);\n            }\n        };\n        return MaskSpriteContainer;\n    }(PIXI.Container));\n    LIVE2DCUBISMPIXI.MaskSpriteContainer = MaskSpriteContainer;\n    var ModelBuilder = (function () {\n        function ModelBuilder() {\n            this._textures = new Array();\n            this._timeScale = 1;\n            this._animatorBuilder = new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder();\n        }\n        ModelBuilder.prototype.setMoc = function (value) {\n            this._moc = value;\n            return this;\n        };\n        ModelBuilder.prototype.setTimeScale = function (value) {\n            this._timeScale = value;\n            return this;\n        };\n        ModelBuilder.prototype.setPhysics3Json = function (value) {\n            if (!this._physicsRigBuilder) {\n                this._physicsRigBuilder = new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder();\n            }\n            this._physicsRigBuilder.setPhysics3Json(value);\n            return this;\n        };\n        ModelBuilder.prototype.setUserData3Json = function (value) {\n            if (!this._userDataBuilder) {\n                this._userDataBuilder = new LIVE2DCUBISMFRAMEWORK.UserDataBuilder();\n            }\n            this._userDataBuilder.setUserData3Json(value);\n            return this;\n        };\n        ModelBuilder.prototype.addTexture = function (index, texture) {\n            this._textures.splice(index, 0, texture);\n            return this;\n        };\n        ModelBuilder.prototype.addAnimatorLayer = function (name, blender, weight) {\n            if (blender === void 0) { blender = LIVE2DCUBISMFRAMEWORK.BuiltinAnimationBlenders.OVERRIDE; }\n            if (weight === void 0) { weight = 1; }\n            this._animatorBuilder.addLayer(name, blender, weight);\n            return this;\n        };\n        ModelBuilder.prototype.addGroups = function (groups) {\n            this._groups = groups;\n            return this;\n        };\n        ModelBuilder.prototype.buildFromModel3Json = function (loader, model3Obj, callbackFunc) {\n            var _this = this;\n            console.log(model3Obj);\n            var model3URL = model3Obj.url;\n            var modelDir = model3URL.substring(0, model3URL.lastIndexOf(\"/\") + 1);\n            var textureCount = 0;\n            if (typeof (model3Obj.data['FileReferences']['Moc']) !== \"undefined\")\n                loader.add('moc', modelDir + model3Obj.data['FileReferences']['Moc'], { xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.BUFFER });\n            if (typeof (model3Obj.data['FileReferences']['Textures']) !== \"undefined\") {\n                model3Obj.data['FileReferences']['Textures'].forEach(function (element) {\n                    loader.add('texture' + textureCount, modelDir + element);\n                    textureCount++;\n                });\n            }\n            if (typeof (model3Obj.data['FileReferences']['Physics']) !== \"undefined\")\n                loader.add('physics', modelDir + model3Obj.data['FileReferences']['Physics'], { xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON });\n            if (typeof (model3Obj.data['FileReferences']['UserData']) !== \"undefined\")\n                loader.add('userdata', modelDir + model3Obj.data['FileReferences']['UserData'], { xhrType: PIXI.loaders.Resource.XHR_RESPONSE_TYPE.JSON });\n            if (typeof (model3Obj.data['Groups'] !== \"undefined\"))\n                this._groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj.data);\n            loader.load(function (loader, resources) {\n                if (typeof (resources['moc']) !== \"undefined\")\n                    _this.setMoc(Live2DCubismCore.Moc.fromArrayBuffer(resources['moc'].data));\n                if (typeof (resources['texture' + 0]) !== \"undefined\") {\n                    for (var i = 0; i < textureCount; i++)\n                        _this.addTexture(i, resources['texture' + i].texture);\n                }\n                if (typeof (resources['physics']) !== \"undefined\")\n                    _this.setPhysics3Json(resources['physics'].data);\n                if (typeof (resources['userdata']) !== \"undefined\")\n                    _this.setUserData3Json(resources['userdata'].data);\n                var model = _this.build();\n                callbackFunc(model);\n            });\n        };\n        ModelBuilder.prototype.build = function () {\n            var coreModel = Live2DCubismCore.Model.fromMoc(this._moc);\n            if (coreModel == null) {\n                return null;\n            }\n            var animator = this._animatorBuilder\n                .setTarget(coreModel)\n                .setTimeScale(this._timeScale)\n                .build();\n            var physicsRig = null;\n            if (this._physicsRigBuilder) {\n                physicsRig = this._physicsRigBuilder\n                    .setTarget(coreModel)\n                    .setTimeScale(this._timeScale)\n                    .build();\n            }\n            var userData = null;\n            if (this._userDataBuilder) {\n                userData = this._userDataBuilder\n                    .setTarget(coreModel)\n                    .build();\n            }\n            return Model._create(coreModel, this._textures, animator, physicsRig, userData, this._groups);\n        };\n        return ModelBuilder;\n    }());\n    LIVE2DCUBISMPIXI.ModelBuilder = ModelBuilder;\n    var CubismMesh = (function (_super) {\n        __extends(CubismMesh, _super);\n        function CubismMesh() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.isCulling = false;\n            _this.isMaskMesh = false;\n            return _this;\n        }\n        CubismMesh.prototype._renderWebGL = function (renderer) {\n            if (this.isMaskMesh === true)\n                renderer.state.setFrontFace(1);\n            else\n                renderer.state.setFrontFace(0);\n            if (this.isCulling === true)\n                renderer.state.setCullFace(1);\n            else\n                renderer.state.setCullFace(0);\n            _super.prototype._renderWebGL.call(this, renderer);\n            renderer.state.setFrontFace(0);\n        };\n        return CubismMesh;\n    }(PIXI.mesh.Mesh));\n    LIVE2DCUBISMPIXI.CubismMesh = CubismMesh;\n})(LIVE2DCUBISMPIXI || (LIVE2DCUBISMPIXI = {}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}