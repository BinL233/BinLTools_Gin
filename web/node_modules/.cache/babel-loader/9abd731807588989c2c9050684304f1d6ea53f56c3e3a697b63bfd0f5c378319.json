{"ast":null,"code":"// const PIXI = require('./l2d/pixi.min.js')\n// const LIVE2DCUBISMFRAMEWORK = require('./live2dcubismframework.js')\nimport Live2DCubismCore from \"https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js\";\nimport * as PIXI from 'pixi.js';\nimport LIVE2DCUBISMFRAMEWORK from \"./live2dcubismframework.js\";\nimport LIVE2DCUBISMPIXI from \"./live2dcubismpixi.js\";\n// import PIXI from\n\nclass L2D {\n  constructor(basePath) {\n    this.basePath = basePath;\n    this.loader = new PIXI.Loader(this.basePath);\n    this.animatorBuilder = new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder();\n    this.timeScale = 1;\n    this.models = {};\n    //建立一个触发事件（触摸，加载等）和动作的对应表\n    this.TriggerMotions = new Map();\n    //建立一个触发区域和对应动作的对应表\n    this.TapAreas = new Map();\n  }\n  setPhysics3Json(value) {\n    if (!this.physicsRigBuilder) {\n      this.physicsRigBuilder = new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder();\n    }\n    this.physicsRigBuilder.setPhysics3Json(value);\n    return this;\n  }\n  load(name, v) {\n    console.log(\"loading:\", name);\n    if (!this.models[name]) {\n      let modelDir = name + '/';\n      let modelPath = name + '.model3.json';\n      let textures = [];\n      let textureCount = 0;\n      let motionNames = [];\n      let modelNames = [];\n      let _ = this;\n\n      //if (!modelNames.includes(name+'_model')){\n      this.loader.add(name + '_model', modelDir + modelPath, {\n        xhrType: 'json'\n      });\n      modelNames.push(name + '_model');\n      //}\n\n      this.loader.load((loader, resources) => {\n        let model3Obj = resources[name + '_model'].data;\n        if (typeof model3Obj['FileReferences']['Moc'] !== \"undefined\") {\n          loader.add(name + '_moc', modelDir + model3Obj['FileReferences']['Moc'], {\n            xhrType: PIXI.Loader.XHR_RESPONSE_TYPE.BUFFER\n          });\n        }\n        if (typeof model3Obj['FileReferences']['Textures'] !== \"undefined\") {\n          model3Obj['FileReferences']['Textures'].forEach(element => {\n            loader.add(name + '_texture' + textureCount, modelDir + element);\n            textureCount++;\n          });\n        }\n        if (typeof model3Obj['FileReferences']['Physics'] !== \"undefined\") {\n          loader.add(name + '_physics', modelDir + model3Obj['FileReferences']['Physics'], {\n            xhrType: 'json'\n          });\n        }\n        if (typeof model3Obj['FileReferences']['Motions'] !== \"undefined\") {\n          for (let group in model3Obj['FileReferences']['Motions']) {\n            var groupmotionNames = [];\n            model3Obj['FileReferences']['Motions'][group].forEach(element => {\n              let motionName = element['File'].split('/').pop().split('.').shift();\n              if (!motionNames.includes(motionName)) {\n                loader.add(motionName, modelDir + element['File'], {\n                  xhrType: 'json'\n                });\n                motionNames.push(motionName);\n              } else {\n                var n = motionName + String(Date.now());\n                loader.add(n, modelDir + element['File'], {\n                  xhrType: 'json'\n                });\n                motionNames.push(motionName);\n              }\n              groupmotionNames.push(motionName);\n            });\n            _.TriggerMotions.set(group, groupmotionNames);\n          }\n        }\n        let groups = null;\n        // 原始代码好像不太对劲。。typeof的括号位置不对\n        // if (typeof(model3Obj['Groups'] !== \"undefined\")) {\n        //     groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj);\n        // }\n        if (typeof model3Obj['Groups'] !== 'undefined') {\n          groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj);\n        }\n        //从HitAreas配置中拿到点击区域和动作的对应关系，输入格式为\n        /*\n        // \"HitAreas\": [\n        //     {\n        //       \"Id\": \"TouchBody\",\n        //       \"Motion\": \"TapBody\"\n        //     },\n        //    {\n        //       \"Id\": \"TouchHead\",\n        //       \"Motion\": \"TapHead:touch_head,main\"\n        //     }\n        // ]\n        */\n        if (typeof model3Obj['HitAreas'] !== 'undefined') {\n          let tempHitAreas = model3Obj['HitAreas'];\n          //按Order排序，Order值越大，越靠前，没有Order的设置为默认值0\n          tempHitAreas.forEach(e => {\n            if (!e.Order) {\n              e.Order = 0;\n            }\n          });\n          tempHitAreas.sort(function (a, b) {\n            return b.Order - a.Order;\n          });\n          console.log(tempHitAreas);\n          tempHitAreas.forEach(e => {\n            let [MotionsGroup, MotionsItems] = e.Motion.split(':');\n            if (MotionsItems) {\n              _.TapAreas.set(e.Id, MotionsItems.split(','));\n            } else {\n              _.TapAreas.set(e.Id, _.TriggerMotions.get(MotionsGroup));\n            }\n          });\n        }\n        loader.load((l, r) => {\n          let moc = null;\n          if (typeof r[name + '_moc'] !== \"undefined\") {\n            moc = Live2DCubismCore.Moc.fromArrayBuffer(r[name + '_moc'].data);\n            if (moc == null) {\n              console.log(\"null1111\");\n            }\n          }\n          if (typeof r[name + '_texture' + 0] !== \"undefined\") {\n            for (let i = 0; i < textureCount; i++) {\n              textures.splice(i, 0, r[name + '_texture' + i].texture);\n            }\n          }\n          if (typeof r[name + '_physics'] !== \"undefined\") {\n            this.setPhysics3Json(r[name + '_physics'].data);\n          }\n          //这里只是把加载了动作数据和动作名，没有把动作和触发事件联系起来\n          let motions = new Map();\n          motionNames.forEach(e => {\n            motions.set(e, LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(r[e].data));\n          });\n          let model = null;\n          let coreModel = Live2DCubismCore.Model.fromMoc(moc);\n          if (coreModel == null) {\n            return;\n          }\n          let animator = this.animatorBuilder.setTarget(coreModel).setTimeScale(this.timeScale).build();\n          let physicsRig = this.physicsRigBuilder.setTarget(coreModel).setTimeScale(this.timeScale).build();\n          let userData = null;\n          model = LIVE2DCUBISMPIXI.Model._create(coreModel, textures, animator, physicsRig, userData, groups);\n          model.motions = motions;\n          this.models[name] = model;\n          v.changeCanvas(model);\n        });\n      });\n    } else {\n      v.changeCanvas(this.models[name]);\n    }\n  }\n}\nexport default L2D;","map":{"version":3,"names":["Live2DCubismCore","PIXI","LIVE2DCUBISMFRAMEWORK","LIVE2DCUBISMPIXI","L2D","constructor","basePath","loader","Loader","animatorBuilder","AnimatorBuilder","timeScale","models","TriggerMotions","Map","TapAreas","setPhysics3Json","value","physicsRigBuilder","PhysicsRigBuilder","load","name","v","console","log","modelDir","modelPath","textures","textureCount","motionNames","modelNames","_","add","xhrType","push","resources","model3Obj","data","XHR_RESPONSE_TYPE","BUFFER","forEach","element","group","groupmotionNames","motionName","split","pop","shift","includes","n","String","Date","now","set","groups","Groups","fromModel3Json","tempHitAreas","e","Order","sort","a","b","MotionsGroup","MotionsItems","Motion","Id","get","l","r","moc","Moc","fromArrayBuffer","i","splice","texture","motions","Animation","fromMotion3Json","model","coreModel","Model","fromMoc","animator","setTarget","setTimeScale","build","physicsRig","userData","_create","changeCanvas"],"sources":["/Users/kaileying/Documents/Repos/BinLTools_Gin/web/src/components/live2dWigit/l2d.js"],"sourcesContent":["// const PIXI = require('./l2d/pixi.min.js')\n// const LIVE2DCUBISMFRAMEWORK = require('./live2dcubismframework.js')\nimport Live2DCubismCore from \"https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js\"\nimport * as PIXI from 'pixi.js';\nimport LIVE2DCUBISMFRAMEWORK from \"./live2dcubismframework.js\"\nimport LIVE2DCUBISMPIXI from \"./live2dcubismpixi.js\"\n// import PIXI from\n\n\nclass L2D {\n    constructor(basePath) {\n        this.basePath = basePath;\n        this.loader = new PIXI.Loader(this.basePath);\n        this.animatorBuilder = new LIVE2DCUBISMFRAMEWORK.AnimatorBuilder();\n        this.timeScale = 1;\n        this.models = {};\n        //建立一个触发事件（触摸，加载等）和动作的对应表\n        this.TriggerMotions = new Map();\n        //建立一个触发区域和对应动作的对应表\n        this.TapAreas = new Map();\n\n    }\n\n    setPhysics3Json(value) {\n        if (!this.physicsRigBuilder) {\n            this.physicsRigBuilder = new LIVE2DCUBISMFRAMEWORK.PhysicsRigBuilder();\n        }\n        this.physicsRigBuilder.setPhysics3Json(value);\n\n        return this;\n    }\n\n    load(name, v) {\n        console.log(\"loading:\", name)\n        if (!this.models[name]) {\n            let modelDir = name + '/';\n            let modelPath = name + '.model3.json';\n            let textures = [];\n            let textureCount = 0;\n            let motionNames = [];\n            let modelNames = [];\n            let _ = this;\n\n            //if (!modelNames.includes(name+'_model')){\n            this.loader.add(name + '_model', modelDir + modelPath, {xhrType: 'json'});\n            modelNames.push(name + '_model');\n            //}\n\n            this.loader.load((loader, resources) => {\n                let model3Obj = resources[name + '_model'].data;\n                if (typeof (model3Obj['FileReferences']['Moc']) !== \"undefined\") {\n                    loader.add(name + '_moc', modelDir + model3Obj['FileReferences']['Moc'], {xhrType: PIXI.Loader.XHR_RESPONSE_TYPE.BUFFER});\n                }\n\n                if (typeof (model3Obj['FileReferences']['Textures']) !== \"undefined\") {\n                    model3Obj['FileReferences']['Textures'].forEach((element) => {\n                        loader.add(name + '_texture' + textureCount, modelDir + element);\n                        textureCount++;\n                    });\n                }\n\n                if (typeof (model3Obj['FileReferences']['Physics']) !== \"undefined\") {\n                    loader.add(name + '_physics', modelDir + model3Obj['FileReferences']['Physics'], {xhrType: 'json'});\n                }\n                if (typeof (model3Obj['FileReferences']['Motions']) !== \"undefined\") {\n                    for (let group in model3Obj['FileReferences']['Motions']) {\n                        var groupmotionNames = [];\n                        model3Obj['FileReferences']['Motions'][group].forEach((element) => {\n\n                            let motionName = element['File'].split('/').pop().split('.').shift();\n                            if (!motionNames.includes(motionName)) {\n                                loader.add(motionName, modelDir + element['File'], {xhrType: 'json'});\n                                motionNames.push(motionName);\n                            } else {\n                                var n = motionName + String(Date.now());\n                                loader.add(n, modelDir + element['File'], {xhrType: 'json'});\n                                motionNames.push(motionName);\n                            }\n                            groupmotionNames.push(motionName)\n                        });\n                        _.TriggerMotions.set(group, groupmotionNames)\n\n                    }\n                }\n\n                let groups = null;\n                // 原始代码好像不太对劲。。typeof的括号位置不对\n                // if (typeof(model3Obj['Groups'] !== \"undefined\")) {\n                //     groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj);\n                // }\n                if (typeof (model3Obj['Groups']) !== 'undefined') {\n                    groups = LIVE2DCUBISMFRAMEWORK.Groups.fromModel3Json(model3Obj);\n                }\n                //从HitAreas配置中拿到点击区域和动作的对应关系，输入格式为\n                /*\n                // \"HitAreas\": [\n                //     {\n                //       \"Id\": \"TouchBody\",\n                //       \"Motion\": \"TapBody\"\n                //     },\n                //    {\n                //       \"Id\": \"TouchHead\",\n                //       \"Motion\": \"TapHead:touch_head,main\"\n                //     }\n                // ]\n                */\n                if (typeof (model3Obj['HitAreas']) !== 'undefined') {\n                    let tempHitAreas = model3Obj['HitAreas'];\n                    //按Order排序，Order值越大，越靠前，没有Order的设置为默认值0\n                    tempHitAreas.forEach((e) => {\n                        if (!e.Order) {\n                            e.Order = 0\n                        }\n                    })\n                    tempHitAreas.sort(function (a, b) {\n                        return b.Order - a.Order\n                    });\n                    console.log(tempHitAreas);\n                    tempHitAreas.forEach((e) => {\n                        let [MotionsGroup, MotionsItems] = e.Motion.split(':')\n                        if (MotionsItems) {\n                            _.TapAreas.set(e.Id, MotionsItems.split(','))\n                        } else {\n                            _.TapAreas.set(e.Id, _.TriggerMotions.get(MotionsGroup))\n                        }\n                    })\n                }\n                loader.load((l, r) => {\n                    let moc = null;\n                    if (typeof (r[name + '_moc']) !== \"undefined\") {\n                        moc = Live2DCubismCore.Moc.fromArrayBuffer(r[name + '_moc'].data);\n                        if (moc == null) {\n                            console.log(\"null1111\")\n                        }\n                    }\n\n                    if (typeof (r[name + '_texture' + 0]) !== \"undefined\") {\n                        for (let i = 0; i < textureCount; i++) {\n                            textures.splice(i, 0, r[name + '_texture' + i].texture);\n                        }\n                    }\n\n                    if (typeof (r[name + '_physics']) !== \"undefined\") {\n                        this.setPhysics3Json(r[name + '_physics'].data);\n                    }\n                    //这里只是把加载了动作数据和动作名，没有把动作和触发事件联系起来\n                    let motions = new Map();\n                    motionNames.forEach((e) => {\n                        \n                        motions.set(e, LIVE2DCUBISMFRAMEWORK.Animation.fromMotion3Json(r[e].data));\n                    });\n\n                    let model = null;\n\n                    let coreModel = Live2DCubismCore.Model.fromMoc(moc);\n\n                    if (coreModel == null) {\n                        return;\n                    }\n\n                    let animator = this.animatorBuilder\n                        .setTarget(coreModel)\n                        .setTimeScale(this.timeScale)\n                        .build();\n                    let physicsRig = this.physicsRigBuilder\n                        .setTarget(coreModel)\n                        .setTimeScale(this.timeScale)\n                        .build();\n\n                    let userData = null;\n\n                    model = LIVE2DCUBISMPIXI.Model._create(coreModel, textures, animator, physicsRig, userData, groups);\n                    model.motions = motions;\n                    this.models[name] = model;\n\n                    v.changeCanvas(model);\n                });\n            });\n        } else {\n            v.changeCanvas(this.models[name]);\n        }\n    }\n}\n\nexport default L2D;"],"mappings":"AAAA;AACA;AACA,OAAOA,gBAAgB,MAAM,sEAAsE;AACnG,OAAO,KAAKC,IAAI,MAAM,SAAS;AAC/B,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD;;AAGA,MAAMC,GAAG,CAAC;EACNC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,MAAM,GAAG,IAAIN,IAAI,CAACO,MAAM,CAAC,IAAI,CAACF,QAAQ,CAAC;IAC5C,IAAI,CAACG,eAAe,GAAG,IAAIP,qBAAqB,CAACQ,eAAe,CAAC,CAAC;IAClE,IAAI,CAACC,SAAS,GAAG,CAAC;IAClB,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB;IACA,IAAI,CAACC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC/B;IACA,IAAI,CAACC,QAAQ,GAAG,IAAID,GAAG,CAAC,CAAC;EAE7B;EAEAE,eAAeA,CAACC,KAAK,EAAE;IACnB,IAAI,CAAC,IAAI,CAACC,iBAAiB,EAAE;MACzB,IAAI,CAACA,iBAAiB,GAAG,IAAIhB,qBAAqB,CAACiB,iBAAiB,CAAC,CAAC;IAC1E;IACA,IAAI,CAACD,iBAAiB,CAACF,eAAe,CAACC,KAAK,CAAC;IAE7C,OAAO,IAAI;EACf;EAEAG,IAAIA,CAACC,IAAI,EAAEC,CAAC,EAAE;IACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;IAC7B,IAAI,CAAC,IAAI,CAACT,MAAM,CAACS,IAAI,CAAC,EAAE;MACpB,IAAII,QAAQ,GAAGJ,IAAI,GAAG,GAAG;MACzB,IAAIK,SAAS,GAAGL,IAAI,GAAG,cAAc;MACrC,IAAIM,QAAQ,GAAG,EAAE;MACjB,IAAIC,YAAY,GAAG,CAAC;MACpB,IAAIC,WAAW,GAAG,EAAE;MACpB,IAAIC,UAAU,GAAG,EAAE;MACnB,IAAIC,CAAC,GAAG,IAAI;;MAEZ;MACA,IAAI,CAACxB,MAAM,CAACyB,GAAG,CAACX,IAAI,GAAG,QAAQ,EAAEI,QAAQ,GAAGC,SAAS,EAAE;QAACO,OAAO,EAAE;MAAM,CAAC,CAAC;MACzEH,UAAU,CAACI,IAAI,CAACb,IAAI,GAAG,QAAQ,CAAC;MAChC;;MAEA,IAAI,CAACd,MAAM,CAACa,IAAI,CAAC,CAACb,MAAM,EAAE4B,SAAS,KAAK;QACpC,IAAIC,SAAS,GAAGD,SAAS,CAACd,IAAI,GAAG,QAAQ,CAAC,CAACgB,IAAI;QAC/C,IAAI,OAAQD,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAE,KAAK,WAAW,EAAE;UAC7D7B,MAAM,CAACyB,GAAG,CAACX,IAAI,GAAG,MAAM,EAAEI,QAAQ,GAAGW,SAAS,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC,EAAE;YAACH,OAAO,EAAEhC,IAAI,CAACO,MAAM,CAAC8B,iBAAiB,CAACC;UAAM,CAAC,CAAC;QAC7H;QAEA,IAAI,OAAQH,SAAS,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAE,KAAK,WAAW,EAAE;UAClEA,SAAS,CAAC,gBAAgB,CAAC,CAAC,UAAU,CAAC,CAACI,OAAO,CAAEC,OAAO,IAAK;YACzDlC,MAAM,CAACyB,GAAG,CAACX,IAAI,GAAG,UAAU,GAAGO,YAAY,EAAEH,QAAQ,GAAGgB,OAAO,CAAC;YAChEb,YAAY,EAAE;UAClB,CAAC,CAAC;QACN;QAEA,IAAI,OAAQQ,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAE,KAAK,WAAW,EAAE;UACjE7B,MAAM,CAACyB,GAAG,CAACX,IAAI,GAAG,UAAU,EAAEI,QAAQ,GAAGW,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,EAAE;YAACH,OAAO,EAAE;UAAM,CAAC,CAAC;QACvG;QACA,IAAI,OAAQG,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAE,KAAK,WAAW,EAAE;UACjE,KAAK,IAAIM,KAAK,IAAIN,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,EAAE;YACtD,IAAIO,gBAAgB,GAAG,EAAE;YACzBP,SAAS,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAACM,KAAK,CAAC,CAACF,OAAO,CAAEC,OAAO,IAAK;cAE/D,IAAIG,UAAU,GAAGH,OAAO,CAAC,MAAM,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAACE,KAAK,CAAC,CAAC;cACpE,IAAI,CAAClB,WAAW,CAACmB,QAAQ,CAACJ,UAAU,CAAC,EAAE;gBACnCrC,MAAM,CAACyB,GAAG,CAACY,UAAU,EAAEnB,QAAQ,GAAGgB,OAAO,CAAC,MAAM,CAAC,EAAE;kBAACR,OAAO,EAAE;gBAAM,CAAC,CAAC;gBACrEJ,WAAW,CAACK,IAAI,CAACU,UAAU,CAAC;cAChC,CAAC,MAAM;gBACH,IAAIK,CAAC,GAAGL,UAAU,GAAGM,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC;gBACvC7C,MAAM,CAACyB,GAAG,CAACiB,CAAC,EAAExB,QAAQ,GAAGgB,OAAO,CAAC,MAAM,CAAC,EAAE;kBAACR,OAAO,EAAE;gBAAM,CAAC,CAAC;gBAC5DJ,WAAW,CAACK,IAAI,CAACU,UAAU,CAAC;cAChC;cACAD,gBAAgB,CAACT,IAAI,CAACU,UAAU,CAAC;YACrC,CAAC,CAAC;YACFb,CAAC,CAAClB,cAAc,CAACwC,GAAG,CAACX,KAAK,EAAEC,gBAAgB,CAAC;UAEjD;QACJ;QAEA,IAAIW,MAAM,GAAG,IAAI;QACjB;QACA;QACA;QACA;QACA,IAAI,OAAQlB,SAAS,CAAC,QAAQ,CAAE,KAAK,WAAW,EAAE;UAC9CkB,MAAM,GAAGpD,qBAAqB,CAACqD,MAAM,CAACC,cAAc,CAACpB,SAAS,CAAC;QACnE;QACA;QACA;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACgB,IAAI,OAAQA,SAAS,CAAC,UAAU,CAAE,KAAK,WAAW,EAAE;UAChD,IAAIqB,YAAY,GAAGrB,SAAS,CAAC,UAAU,CAAC;UACxC;UACAqB,YAAY,CAACjB,OAAO,CAAEkB,CAAC,IAAK;YACxB,IAAI,CAACA,CAAC,CAACC,KAAK,EAAE;cACVD,CAAC,CAACC,KAAK,GAAG,CAAC;YACf;UACJ,CAAC,CAAC;UACFF,YAAY,CAACG,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;YAC9B,OAAOA,CAAC,CAACH,KAAK,GAAGE,CAAC,CAACF,KAAK;UAC5B,CAAC,CAAC;UACFpC,OAAO,CAACC,GAAG,CAACiC,YAAY,CAAC;UACzBA,YAAY,CAACjB,OAAO,CAAEkB,CAAC,IAAK;YACxB,IAAI,CAACK,YAAY,EAAEC,YAAY,CAAC,GAAGN,CAAC,CAACO,MAAM,CAACpB,KAAK,CAAC,GAAG,CAAC;YACtD,IAAImB,YAAY,EAAE;cACdjC,CAAC,CAAChB,QAAQ,CAACsC,GAAG,CAACK,CAAC,CAACQ,EAAE,EAAEF,YAAY,CAACnB,KAAK,CAAC,GAAG,CAAC,CAAC;YACjD,CAAC,MAAM;cACHd,CAAC,CAAChB,QAAQ,CAACsC,GAAG,CAACK,CAAC,CAACQ,EAAE,EAAEnC,CAAC,CAAClB,cAAc,CAACsD,GAAG,CAACJ,YAAY,CAAC,CAAC;YAC5D;UACJ,CAAC,CAAC;QACN;QACAxD,MAAM,CAACa,IAAI,CAAC,CAACgD,CAAC,EAAEC,CAAC,KAAK;UAClB,IAAIC,GAAG,GAAG,IAAI;UACd,IAAI,OAAQD,CAAC,CAAChD,IAAI,GAAG,MAAM,CAAE,KAAK,WAAW,EAAE;YAC3CiD,GAAG,GAAGtE,gBAAgB,CAACuE,GAAG,CAACC,eAAe,CAACH,CAAC,CAAChD,IAAI,GAAG,MAAM,CAAC,CAACgB,IAAI,CAAC;YACjE,IAAIiC,GAAG,IAAI,IAAI,EAAE;cACb/C,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;YAC3B;UACJ;UAEA,IAAI,OAAQ6C,CAAC,CAAChD,IAAI,GAAG,UAAU,GAAG,CAAC,CAAE,KAAK,WAAW,EAAE;YACnD,KAAK,IAAIoD,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG7C,YAAY,EAAE6C,CAAC,EAAE,EAAE;cACnC9C,QAAQ,CAAC+C,MAAM,CAACD,CAAC,EAAE,CAAC,EAAEJ,CAAC,CAAChD,IAAI,GAAG,UAAU,GAAGoD,CAAC,CAAC,CAACE,OAAO,CAAC;YAC3D;UACJ;UAEA,IAAI,OAAQN,CAAC,CAAChD,IAAI,GAAG,UAAU,CAAE,KAAK,WAAW,EAAE;YAC/C,IAAI,CAACL,eAAe,CAACqD,CAAC,CAAChD,IAAI,GAAG,UAAU,CAAC,CAACgB,IAAI,CAAC;UACnD;UACA;UACA,IAAIuC,OAAO,GAAG,IAAI9D,GAAG,CAAC,CAAC;UACvBe,WAAW,CAACW,OAAO,CAAEkB,CAAC,IAAK;YAEvBkB,OAAO,CAACvB,GAAG,CAACK,CAAC,EAAExD,qBAAqB,CAAC2E,SAAS,CAACC,eAAe,CAACT,CAAC,CAACX,CAAC,CAAC,CAACrB,IAAI,CAAC,CAAC;UAC9E,CAAC,CAAC;UAEF,IAAI0C,KAAK,GAAG,IAAI;UAEhB,IAAIC,SAAS,GAAGhF,gBAAgB,CAACiF,KAAK,CAACC,OAAO,CAACZ,GAAG,CAAC;UAEnD,IAAIU,SAAS,IAAI,IAAI,EAAE;YACnB;UACJ;UAEA,IAAIG,QAAQ,GAAG,IAAI,CAAC1E,eAAe,CAC9B2E,SAAS,CAACJ,SAAS,CAAC,CACpBK,YAAY,CAAC,IAAI,CAAC1E,SAAS,CAAC,CAC5B2E,KAAK,CAAC,CAAC;UACZ,IAAIC,UAAU,GAAG,IAAI,CAACrE,iBAAiB,CAClCkE,SAAS,CAACJ,SAAS,CAAC,CACpBK,YAAY,CAAC,IAAI,CAAC1E,SAAS,CAAC,CAC5B2E,KAAK,CAAC,CAAC;UAEZ,IAAIE,QAAQ,GAAG,IAAI;UAEnBT,KAAK,GAAG5E,gBAAgB,CAAC8E,KAAK,CAACQ,OAAO,CAACT,SAAS,EAAErD,QAAQ,EAAEwD,QAAQ,EAAEI,UAAU,EAAEC,QAAQ,EAAElC,MAAM,CAAC;UACnGyB,KAAK,CAACH,OAAO,GAAGA,OAAO;UACvB,IAAI,CAAChE,MAAM,CAACS,IAAI,CAAC,GAAG0D,KAAK;UAEzBzD,CAAC,CAACoE,YAAY,CAACX,KAAK,CAAC;QACzB,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC,MAAM;MACHzD,CAAC,CAACoE,YAAY,CAAC,IAAI,CAAC9E,MAAM,CAACS,IAAI,CAAC,CAAC;IACrC;EACJ;AACJ;AAEA,eAAejB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}