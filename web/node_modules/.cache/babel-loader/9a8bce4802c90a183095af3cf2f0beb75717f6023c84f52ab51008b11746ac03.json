{"ast":null,"code":"import { getTestContext } from '../../../gl/shader/program/getTestContext.mjs';\n\"use strict\";\nfunction maxRecommendedTextures() {\n  const gl = getTestContext();\n  return gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n}\nexport { maxRecommendedTextures };","map":{"version":3,"names":["maxRecommendedTextures","gl","getTestContext","getParameter","MAX_TEXTURE_IMAGE_UNITS"],"sources":["/Users/kaileying/Documents/Repos/BinLTools_Gin/web/node_modules/pixi.js/src/rendering/renderers/shared/texture/utils/maxRecommendedTextures.ts"],"sourcesContent":["import { getTestContext } from '../../../gl/shader/program/getTestContext';\n\n/**\n * Returns the maximum recommended texture units to use. This uses WebGL1's `MAX_TEXTURE_IMAGE_UNITS`.\n * The response for this is that to get this info via WebGPU, we would need to make a context, which\n * would make this function async, and we want to avoid that.\n * @private\n * @returns {number} The maximum recommended texture units to use.\n */\nexport function maxRecommendedTextures(): number\n{\n    const gl = getTestContext();\n\n    return gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n}\n"],"mappings":";;AASO,SAASA,sBAChBA,CAAA;EACI,MAAMC,EAAA,GAAKC,cAAe;EAEnB,OAAAD,EAAA,CAAGE,YAAa,CAAAF,EAAA,CAAGG,uBAAuB;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}